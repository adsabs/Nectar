#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { component, story, test, barrel } = require('./templates.js');

// grab component name from terminal argument
const [name] = process.argv.slice(2);
if (!name) throw new Error('You must include a component name.');
const base = path.resolve(__dirname, `../..`);
const dir = path.join(base, 'src', name);
const testDir = path.join(base, 'test');
const storyDir = path.join(base, 'stories');

// throw an error if the file already exists
if (fs.existsSync(dir))
  throw new Error('A component with that name already exists.');

function writeFileErrorHandler(err) {
  if (err) {
    throw err;
  }
}

// create the folder
fs.mkdirSync(dir, { recursive: true }, writeFileErrorHandler);

// component.tsx
fs.writeFile(
  path.join(dir, `${name}.tsx`),
  component(name),
  writeFileErrorHandler,
);
// storybook.jsx
fs.writeFile(
  path.join(storyDir, `${name}.stories.tsx`),
  story(name),
  writeFileErrorHandler,
);
// test.tsx
fs.writeFile(
  path.join(testDir, `${name}.test.tsx`),
  test(name),
  writeFileErrorHandler,
);
// index.ts
fs.writeFile(path.join(dir, 'index.ts'), barrel(name), writeFileErrorHandler);

////////////////
/// Optional ///
////////////////

fs.appendFile(
  path.join(base, 'src', 'index.ts'),
  `export * from './${name}';\n`,
  writeFileErrorHandler,
);
